generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(cuid())
  email            String     @unique
  password         String
  isEmailVerified  Boolean    @default(false)
  emailVerifyToken String?
  loginAttempts    Int        @default(0)
  lockUntil        DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  customers        Customer[] // âœ… Relation to customers

  @@map("users")
}

model Customer {
  id           String   @id @default(cuid())
  userId       String
  name         String
  guardianName String
  relation     Relation
  address      String
  aadharNumber String   @unique
  mobileNumber String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  orders       Order[] // âœ… Order relation
  items        Item[]   @relation("CustomerToItems") // âœ… Direct item relation

  @@map("customers")
}

model Order {
  id         String   @id @default(cuid())
  customerId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  Item       Item[]

  @@map("orders")
}

model Item {
  id            String   @id @default(cuid())
  customerId    String
  name          String
  category      Category
  percentage    Float     // monthly interest rate (e.g. 2%)
  amount        Float     // original pledged amount
  itemWeight    String
  imagePath     String?
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  orderId       String

  customer      Customer  @relation("CustomerToItems", fields: [customerId], references: [id], onDelete: Cascade)
  order         Order     @relation(fields: [orderId], references: [id])

  // ðŸ”½ Add these fields:
  interestPaidTill DateTime? // last date till which interest was paid
  totalPaid        Float     @default(0) // total amount paid
  remainingAmount  Float      @default(0) // principal remaining

  payments         Payment[]
  interestHistory  InterestHistory[]

  @@map("items")
}


enum Relation {
  father
  mother
  wife
  husband
  son
  daughter
  other
}

enum Category {
  gold
  silver
}

model Payment {
  id            String   @id @default(cuid())
  itemId        String
  amountPaid    Float
  interestPaid  Float
  principalPaid Float
  paidAt        DateTime @default(now())

  item          Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@map("payments")
}

model InterestHistory {
  id         String   @id @default(cuid())
  itemId     String
  fromDate   DateTime
  toDate     DateTime
  interest   Float
  createdAt  DateTime @default(now())

  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@map("interest_history")
}
